#!/usr/bin/env bash

# inspired by https://zed.dev/install.sh

# shellcheck source=lib.sh
source "${REPO_PATH}/lib.sh"

GITHUB_ORG="zed-industries"
GITHUB_REPO="zed"
BIN_NAME="zed"

latest_version() {
    # strip the leading `v` from the tag name
    echo "${GITHUB_LATEST_TAG}" | cut --characters 2-
}

installed_version() {
    if ! command_exists "${BIN_NAME}"; then
        echo ""
        return 0
    fi

    if ! [[ "$("${BIN_NAME}" --version)" =~ ^Zed\ ([[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+) ]]; then
        panic "Unable to determine currently installed version!"
        exit 1  # redundant, but useful to shellcheck
    fi

    echo "${BASH_REMATCH[1]}"
}

artifact_name() {
    echo "zed-linux-x86_64.tar.gz"
}

download_url() {
    echo "https://github.com/${GITHUB_ORG}/${GITHUB_REPO}/releases/download/${GITHUB_LATEST_TAG}/$(artifact_name)"
}

install_artifact() {
    local archive
    archive="$(artifact_name)"
    tar -xzf "${archive}"

    local install_dir="${XDG_DATA_HOME}/zed"
    rm -rf "${install_dir}.old"
    test ! -d "${install_dir}" || mv "${install_dir}" "${install_dir}.old"

    mv zed.app "${install_dir}"
    ln --symbolic --force "${install_dir}/bin/zed" "${RUSH_USER_BIN}/zed"

    desktop_file_path="${XDG_DATA_HOME}/applications/dev.zed.Zed.desktop"
    sed "s|Icon=zed|Icon=${install_dir}/share/icons/hicolor/512x512/apps/zed.png|g" "${install_dir}/share/applications/zed.desktop" \
        | sed "s|Exec=zed|Exec=${install_dir}/libexec/zed-editor|g" \
        > "${desktop_file_path}"

    rm -rf "${install_dir}.old"
}

install_from_github
install_success
