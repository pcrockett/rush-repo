#!/usr/bin/env bash

# shellcheck source=lib.sh
source "${REPO_PATH}/lib.sh"

GITHUB_ORG="nextcloud-releases"
GITHUB_REPO="desktop"
NEXTCLOUD_BIN_NAME="Nextcloud.AppImage"

latest_tag="$(
    github_latest_tag "${GITHUB_ORG}" "${GITHUB_REPO}"
)"

get_latest_version() {
    # strip the leading `v` from the tag name
    echo "${latest_tag}" | cut --characters 2-
}

get_installed_version() {
    if ! command_exists "${NEXTCLOUD_BIN_NAME}"; then
        echo ""
        return 0
    fi

    if ! [[ "$("${NEXTCLOUD_BIN_NAME}" --version)" =~ ^Nextcloud\ version\ ([[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+) ]]; then
        panic "Unable to determine currently installed nextcloud version!"
        exit 1  # redundant, but useful to shellcheck
    fi

    echo "${BASH_REMATCH[1]}"
}

latest_version="$(get_latest_version)"

if [ "${latest_version}" = "$(get_installed_version)" ]; then
    log_attention "Already installed and up-to-date."
    exit 0
fi

download_url="https://github.com/${GITHUB_ORG}/${GITHUB_REPO}/releases/download/${latest_tag}/Nextcloud-${latest_version}-x86_64.AppImage"

temp_dir="$(mktemp --directory)"
on_exit() {
    rm -rf "${temp_dir}"
}
trap 'on_exit' EXIT

log_info "Download ${download_url} to ${temp_dir}/${NEXTCLOUD_BIN_NAME}..."
curl_download "${download_url}" > "${temp_dir}/${NEXTCLOUD_BIN_NAME}"
chmod +x "${temp_dir}/${NEXTCLOUD_BIN_NAME}"

log_info "Install ${temp_dir}/${NEXTCLOUD_BIN_NAME}..."
install_user_bin "${temp_dir}/${NEXTCLOUD_BIN_NAME}"

log_attention "Done."
