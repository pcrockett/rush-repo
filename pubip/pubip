#!/usr/bin/env bash
set -Eeuo pipefail

is_installed() {
  command -v "${1}" &>/dev/null
}

is_tty() {
  test -t "${1}"
}

stdout_is_tty() {
  is_tty 1
}

stderr_is_tty() {
  is_tty 2
}

init() {
  if stdout_is_tty && stderr_is_tty && is_installed gum; then
    SPINNER_CMD=(gum spin --title "" --show-output --)
  else
    SPINNER_CMD=()
  fi
}

spinner() {
  full_cmd=("${SPINNER_CMD[@]}" "$@")
  "${full_cmd[@]}"
}

curl_download() {
  local url="${1}"
  local curl_cmd=(
    curl --silent --show-error --fail
    --location "${url}"
  )
  spinner "${curl_cmd[@]}"
}

format_output() {
  if is_installed jq; then
    jq '
{
  ip,
  city: (.city + ", " + .country),
  coords: ((.latitude | tostring) + ", " + (.longitude | tostring)),
  isp: .organization,
  is_mullvad: .mullvad_exit_ip,
  blacklisted: .blacklisted.blacklisted
}
'
  elif is_installed fx; then
    # shellcheck disable=2016  # don't want expressions to expand in single quotes
    fx 'x => `
ip:          ${x.ip}
city:        ${x.city}, ${x.country}
coords:      ${x.latitude}, ${x.longitude}
isp:         ${x.organization}
is_mullvad:  ${x.mullvad_exit_ip}
blacklisted: ${x.blacklisted?.blacklisted}
`'
  elif is_installed bat; then
    bat --language json --style snip
  else
    cat
  fi
}

main() {
  init
  raw_output="$(curl_download "https://am.i.mullvad.net/json")"
  if [ "${raw_output}" == "" ]; then
    exit 1 # either network issue or user cancelled with Ctrl+C
  else
    echo "${raw_output}" | format_output
  fi
}

main
