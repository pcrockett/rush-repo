#!/usr/bin/env bash
set -Eeuo pipefail

init() {
    ARCH_WIKI_DIR="/usr/share/doc/arch-wiki/html/en"

    # use `declare -f` to get the source code of functions below so they can
    # be passed to fzf.
    SEARCH_COMMAND="$(declare -f search_wiki)
search_wiki"
    PREVIEW_ARTICLE_COMMAND="$(declare -f preview_article)
preview_article"
    OPEN_ARTICLE_COMMAND="$(declare -f open_article)
open_article"
}

exec_fzf() {
    SHELL="sh" FZF_DEFAULT_COMMAND="${SEARCH_COMMAND} ''" fzf "${@}"
}

search_wiki() {
    # shellcheck shell=sh
    # this function isn't executed here in this script directly
    # it's actually a shell function that is dumped into fzf

    # first, search file names. they will always be the first search results.
    rg --files | rg --smart-case --color=always "$@"

    # then search file contents. these results will come after file name results.
    rg --hidden --files-with-matches --color=always --smart-case "$@"
}

preview_article() {
    # shellcheck shell=sh
    # this function isn't executed here in this script directly
    # it's actually a shell function that is dumped into fzf
    w3m -cols "${FZF_PREVIEW_COLUMNS}" "$(readlink -e "$1")"
}

open_article() {
    # shellcheck shell=sh
    # this function isn't executed here in this script directly
    # it's actually a shell function that is dumped into fzf
    w3m "$(readlink -e "$1")"
}

main() {
    init
    cd "${ARCH_WIKI_DIR}"
    exec_fzf --ansi \
        --disabled \
        --query "" \
        --preview "${PREVIEW_ARTICLE_COMMAND} {}" \
        --preview-window "right,70%" \
        --bind "enter:execute(${OPEN_ARTICLE_COMMAND} {})" \
        --bind "change:reload(${SEARCH_COMMAND} {q} || true;)"
}

main
