#!/usr/bin/env bash
set -Eeuo pipefail

# Fuzzy-find pueue jobs and run pueue commands against them
#
# Example usage:
#
#     # run `pueue follow <selected_job_id>`
#     fzpu follow
#
#     # run `pueue log --full <selected_job_ids...>`
#     fzpu log --full
#
#     # run `pueue remove <selected_job_ids...>`
#     fzpu remove
#

CLI_ARGS=("${@}")

select_job_ids() {
    pueue status \
        | grep --perl-regexp '^─+$' --invert-match \
        | grep --perl-regexp '^═+$' --invert-match \
        | grep --perl-regexp '^Group "\w+" .+' --invert-match \
        | grep --perl-regexp '^\s*$' --invert-match \
        | grep --perl-regexp '\s*Id\s+Status\s+Command\s+Path' --invert-match \
        | fzf --multi --tac --height 10 \
        | awk '{print $1}'
}

main() {
    if [ "${#CLI_ARGS[@]}" -eq 0 ]; then
        # user just wants to see `pueue status`
        pueue status
        exit 0
    fi

    local jobs
    jobs="$(select_job_ids)"
    test "${jobs}" != "" || exit 1  # user probably hit ctrl+c in fzf interface

    echo "${jobs}" | xargs pueue "${CLI_ARGS[@]}"
}

main
