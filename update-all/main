#!/usr/bin/env bash

# shellcheck source=lib.sh
source "${REPO_PATH}/lib.sh"

run_if() {
    if command_exists "${1}"; then
        "${@}"
    fi
}

root_run_if() {
    if command_exists "${1}"; then
        as_root "${@}"
    fi
}

rush_packages() {
    local installed_packages_dir
    installed_packages_dir="$(repo_state_dir)/installed_packages"
    mkdir --parent "${installed_packages_dir}"

    find_packages() {
        find "${installed_packages_dir}" -maxdepth 1 -mindepth 1
    }

    for full_file_path in $(find_packages); do
        package_name="$(basename "${full_file_path}")"
        rush get "${package_name}" || panic "Unable to update ${package_name}"
    done
}

check_arch_news() {
    if ! command_exists arch-news-check; then
        return 0
    elif arch-news-check; then
        return 0
    else
        if command_exists w3m; then
            w3m "https://archlinux.org/news/"
            log_attention "If you want to continue, run this script again."
            return 1
        else
            log_attention "Check arch news first! <https://archlinux.org/news/>"
            return 1
        fi
    fi
}

main() {
    root_run_if apt-get update
    root_run_if apt-get upgrade --yes --with-new-pkgs
    if check_arch_news; then
        log_info "No new Arch news."
        root_run_if pacman -Syu --noconfirm
        run_if yay -Syu --noconfirm --aur
    else
        exit 1
    fi
    rush_packages
    run_if flatpak uninstall --unused --assumeyes
    run_if flatpak update --assumeyes
    run_if pipx upgrade-all --include-injected
    run_if gh extension upgrade --all
    run_if heroku plugins:update
    run_if brew update --quiet
    run_if brew upgrade
    run_if devbox version update

    if command_exists asdf; then
        log_info "Updating asdf..."
        pushd "${ASDF_DIR:-"${HOME}/.asdf"}" &> /dev/null
        git pull
        popd &> /dev/null
    fi

    run_if asdf plugin update --all
    run_if rustup update
    log_attention "done"
    exit 0
}

main
